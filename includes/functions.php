<?php
// ????? ????

// ???? ???? ???? ?????
function cleanInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// ???? ????? ????
function showMessage($type, $message) {
    $alertClass = match($type) {
        'success' => 'alert-success',
        'error' => 'alert-danger',
        'warning' => 'alert-warning',
        'info' => 'alert-info',
        default => 'alert-info'
    };
    
    return "<div class='alert $alertClass alert-dismissible fade show' role='alert'>
                $message
                <button type='button' class='btn-close' data-bs-dismiss='alert'></button>
            </div>";
}

// ???? ???? ???
function formatMoney($amount) {
    return number_format($amount ?? 0, 0, '.', ',');
}

// ???? ????? ????? ?????? ?? ????
function convertToJalali($date) {
    if (!$date) return '-';
    
    $timestamp = strtotime($date);
    $jalali = jdate('Y/m/d', $timestamp);
    return $jalali;
}

// ???? ???? ????? - ??? ???? undefined function
function formatDate($date) {
    if (!$date) return '-';
    
    $timestamp = strtotime($date);
    return jdate('Y/m/d H:i', $timestamp);
}

// ???? ????? ????
function jdate($format, $timestamp = null) {
    if ($timestamp === null) {
        $timestamp = time();
    }
    
    // ????? ???? ???? ????? - ?? ???? ???? ??????? ???????? ???? jdf ??????? ???
    $date = date('Y/m/d H:i:s', $timestamp);
    return $date; // ?????? ????? ?????? ????????????
}

// ???? ?????? ????? ??????
function getTransactionTypes() {
    return [
        '??????' => '??????',
        '?????' => '?????'
    ];
}

// ???? ?????? ??????? ??????
function getPaymentMethods() {
    return [
        '???' => '???',
        '??' => '??',
        '?????' => '?????',
        '???? ?? ????' => '???? ?? ????',
        '????????' => '????????'
    ];
}

// ???? ?????? ????????? ?????
function getProjectStatuses() {
    return [
        '?? ??? ?????' => '?? ??? ?????',
        '????? ???' => '????? ???',
        '??? ???' => '??? ???',
        '????' => '????'
    ];
}

// ???? ?????? ?????????? ??????
function getFollowUpPriorities() {
    return [
        '????' => '????',
        '???' => '???',
        '????' => '????'
    ];
}

// ???? ?????? ????????? ??????
function getFollowUpStatuses() {
    return [
        '?? ??????' => '?? ??????',
        '????? ???' => '????? ???',
        '??? ???' => '??? ???'
    ];
}

// ???? ????? ????
function uploadFile($file, $directory = 'general') {
    global $upload_dir, $allowed_extensions, $max_file_size;
    
    if ($file['error'] !== UPLOAD_ERR_OK) {
        return ['success' => false, 'message' => '??? ?? ????? ????'];
    }
    
    $fileInfo = pathinfo($file['name']);
    $extension = strtolower($fileInfo['extension']);
    
    if (!in_array($extension, $allowed_extensions)) {
        return ['success' => false, 'message' => '??? ???? ???? ????'];
    }
    
    if ($file['size'] > $max_file_size) {
        return ['success' => false, 'message' => '??? ???? ??? ?? ?? ???? ???'];
    }
    
    $targetDir = $upload_dir . $directory . '/';
    if (!is_dir($targetDir)) {
        mkdir($targetDir, 0777, true);
    }
    
    $fileName = uniqid() . '_' . time() . '.' . $extension;
    $targetPath = $targetDir . $fileName;
    
    if (move_uploaded_file($file['tmp_name'], $targetPath)) {
        return ['success' => true, 'filename' => $directory . '/' . $fileName];
    }
    
    return ['success' => false, 'message' => '??? ?? ????? ????'];
}

// ???? ??? ????
function deleteFile($filename) {
    global $upload_dir;
    
    $filePath = $upload_dir . $filename;
    if (file_exists($filePath)) {
        return unlink($filePath);
    }
    return false;
}

// ???? ????? ?? ????
function generateUniqueCode($prefix = '') {
    return $prefix . date('Ymd') . rand(1000, 9999);
}

// ???? ?????? ????? ????
function calculateAccountBalance($accountId, $db) {
    $stmt = $db->prepare("SELECT 
        initial_balance,
        COALESCE((SELECT SUM(amount) FROM finance_transactions 
                  WHERE bank_account_id = :id1 AND transaction_type = '??????'), 0) as total_income,
        COALESCE((SELECT SUM(amount) FROM finance_transactions 
                  WHERE bank_account_id = :id2 AND transaction_type = '?????'), 0) as total_expense
        FROM bank_accounts WHERE id = :id3");
    
    $stmt->execute(['id1' => $accountId, 'id2' => $accountId, 'id3' => $accountId]);
    $data = $stmt->fetch();
    
    if ($data) {
        return $data['initial_balance'] + $data['total_income'] - $data['total_expense'];
    }
    return 0;
}

// ???? ?????? ???? ???????
function getDashboardStats($db) {
    $stats = [];
    
    // ????? ???????
    $stats['total_clients'] = $db->query("SELECT COUNT(*) FROM clients")->fetchColumn();
    
    // ????? ????????? ????
    $stats['active_projects'] = $db->query("SELECT COUNT(*) FROM projects WHERE status = '?? ??? ?????'")->fetchColumn();
    
    // ????? ?????????? ?????
    $today = date('Y-m-d');
    $stats['today_followups'] = $db->query("SELECT COUNT(*) FROM follow_ups WHERE DATE(reminder_date) = '$today'")->fetchColumn();
    
    // ????? ??? ????
    $currentMonth = date('Y-m');
    $stats['monthly_income'] = $db->query("SELECT SUM(amount) FROM finance_transactions 
                                           WHERE transaction_type = '??????' 
                                           AND DATE_FORMAT(transaction_date, '%Y-%m') = '$currentMonth'")->fetchColumn() ?? 0;
    
    return $stats;
}
?>